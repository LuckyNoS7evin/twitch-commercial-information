// this file contains polyfill required for oidc-client
// with Array.from,Array.prototype.find,String.prototype.startsWith
Array.from || (Array.from = (function () { var t = Object.prototype.toString; var u = function (r) { return typeof r === 'function' || t.call(r) === '[object Function]' }; var e = Math.pow(2, 53) - 1; var h = function (r) { var t; var n = (t = Number(r), isNaN(t) ? 0 : t !== 0 && isFinite(t) ? (t > 0 ? 1 : -1) * Math.floor(Math.abs(t)) : t); return Math.min(Math.max(n, 0), e) }; return function (r) { var t = Object(r); if (r == null) throw new TypeError('Array.from requires an array-like object - not null or undefined'); var n; var e = arguments.length > 1 ? arguments[1] : void 0; if (void 0 !== e) { if (!u(e)) throw new TypeError('Array.from: when provided, the second argument must be a function'); arguments.length > 2 && (n = arguments[2]) } for (var o, i = h(t.length), a = u(this) ? Object(new this(i)) : new Array(i), f = 0; f < i;)o = t[f], a[f] = e ? void 0 === n ? e(o, f) : e.call(n, o, f) : o, f += 1; return a.length = i, a } }())), Array.prototype.find || Object.defineProperty(Array.prototype, 'find', { value: function (r) { if (this == null) throw new TypeError('"this" is null or not defined'); var t = Object(this); var n = t.length >>> 0; if (typeof r !== 'function') throw new TypeError('predicate must be a function'); for (var e = arguments[1], o = 0; o < n;) { var i = t[o]; if (r.call(e, i, o, t)) return i; o++ } }, configurable: !0, writable: !0 }), String.prototype.startsWith || (String.prototype.startsWith = function (r, t) { return this.substr(!t || t < 0 ? 0 : +t, r.length) === r })
